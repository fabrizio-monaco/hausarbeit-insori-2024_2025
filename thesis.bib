@INPROCEEDINGS{7332619,
  author={Maldonado, Everton da S. and Shihab, Emad},
  booktitle={2015 IEEE 7th International Workshop on Managing Technical Debt (MTD)}, 
  title={Detecting and quantifying different types of self-admitted technical Debt}, 
  year={2015},
  volume={},
  number={},
  abstract={Technical Debt is a term that has been used to express non-optimal solutions during the development of software projects. These non optimal solutions are often shortcuts that allow the project to move faster in the short term, at the cost of increased maintenance in the future. To help alleviate the impact of technical debt, a number of studies focused on the detection of technical debt. More recently, our work shown that one possible source to detect technical debt is using source code comments, also referred to as self-admitted technical debt. However, what types of technical debt can be detected using source code comments remains as an open question. Therefore, in this paper we examine code comments to determine the different types of technical debt. First, we propose four simple filtering heuristics to eliminate comments that are not likely to contain technical debt. Second, we read through more than 33K comments, and we find that self-admitted technical debt can be classified into five main types - design debt, defect debt, documentation debt, requirement debt and test debt. The most common type of self-admitted technical debt is design debt, making up between 42% to 84% of the classified comments. Lastly, we make the classified dataset of more than 33K comments publicly available for the community as a way to encourage future research and the evolution of the technical debt landscape.},
  keywords={Java;Documentation;Licenses;Data mining;Software;Maintenance engineering;Context},
  doi={10.1109/MTD.2015.7332619},
  ISSN={},
  month={Oct},
}

@misc{fowler_technical_debt_quadrant,
  author       = {Martin Fowler},
  title        = {Technical Debt Quadrant},
  year         = {2009},
  url          = {https://martinfowler.com/bliki/TechnicalDebtQuadrant.html},
  urldate      = {2025-01-16},
}

@misc{medium:defining-identifying-and-measuring-technical-debt,
  author = {Ankit Garg, Badri Narayan, Shannon Tran},
  publisher = {Salesforce Architects},
  title = {Defining, Identifying, and Measuring Technical Debt | by Salesforce Architects | Salesforce Architects | Medium},
  url = "https://medium.com/salesforce-architects/defining-identifying-and-measuring-technical-debt-5f783e2b381d",
  urldate = {2025-01-16},
  month = {7},
  year = {2021},
  note = "[Online; accessed 2025-01-16]"
}

@misc{DerUmgang12:online,
author = {},
  title = {Der Umgang mit technischen Schulden},
  url = "https://entwickler.de/programmierung/der-umgang-mit-technischen-schulden",
  urldate = {2025-01-17},
  month = {12},
  year = {2022},
  note = "[Online; accessed 2025-01-17]"
}

@online{WhatisTe71:online,
  author = {SonarSource},
  title = {What is Technical Debt? Causes, Types \& Definition Guide | Sonar},
  url = "https://www.sonarsource.com/learn/technical-debt/",
  urldate = {2025-01-20},
  note = "[Online; accessed 2025-01-20]"
}