#import "@preview/glossarium:0.5.1": make-glossary, register-glossary, print-glossary, gls, glspl
#import "../thesis_typ/helper-functions.typ": *

= Einleitung
<ch:intro>
// Problemstellung
Die Softwareentwicklung unterliegt stetigem Wandel. Unternehmen müssen hochwertige Software unter Zeit- und Ressourcenbeschränkungen entwickeln #ccitenum("Guo2014", "159"). Der Druck, schnelle Ergebnisse zu liefern, führt oft zu Kompromissen bei der #gls("codequalität", display: "Codequalität") und #gls("technische_nachhaltigkeit", display: "technischen Nachhaltigkeit"), was technische Schulden entstehen lässt #ccitenum("Guo2014", "160"). Diese resultieren aus „Abkürzungen“ im Entwicklungsprozess: Zeitdruck begünstigt suboptimale Lösungen, unzureichende Ressourcen erschweren Dokumentation, und fehlende Priorisierung technischer Exzellenz führt zu schwer wartbarem Code #footnote("Im Folgenden auch als " + gls("codebasis") + " zu verstehen"). Die Folge sind erhöhter Wartungsaufwand und verzögerte #gls("releasezyklen", display: "Releasezyklen"). Doch technische Schulden wirken sich nicht nur auf die Software aus, sondern auch auf die Entwicklerteams. Eine fehleranfällige #gls("codebasis", display: "Codebasis") kann Frustration und Demotivation auslösen, die Zusammenarbeit erschweren und Konflikte fördern. Daraus ergibt sich die zentrale Fragestellung dieser Arbeit: Wie beeinflussen technische Schulden die Teamdynamik und das Wohlbefinden der Entwickler? #parbreak()
// Motivation und Zielsetzung
Softwareentwicklung wird stark von menschlichen Faktoren geprägt. Trotz Automatisierung bleibt der Erfolg von Softwareprojekten abhängig von der Motivation und Zusammenarbeit der Entwickler. Technische Schulden betreffen nicht nur die Softwarequalität, sondern auch das Arbeitsklima. Ziel dieser Arbeit ist es, ihre sozialen und psychologischen Auswirkungen zu analysieren und Strategien zur Minderung dieser Effekte zu erarbeiten. #parbreak()
// Überblick zum Vorgehen
Zunächst werden zentrale Erfolgsfaktoren und Herausforderungen in Softwareprojekten beleuchtet. Ein psychologisches Akzeptanzmodell dient zur Analyse der Auswirkungen technischer Schulden auf Motivation und Softwareakzeptanz. Nach einer Klassifizierung technischer Schulden werden deren Ursachen und Folgen untersucht. Abschließend gibt die Arbeit praxisorientierte Empfehlungen zur Minimierung technischer Schulden und zur Förderung der Teamdynamik.