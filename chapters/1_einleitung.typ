#import "@preview/glossarium:0.2.6": make-glossary, print-glossary, gls, glspl
#import "../thesis_typ/helper-functions.typ": *

= Einleitung
<ch:intro>
// Problemstellung
Die Softwareentwicklung befindet sich in ständigem Wandel. Unternehmen müssen hochwertige Software in immer kürzerer Zeit und mit begrenzten Ressourcen entwickeln und dabei klassische Faktoren wie Funktionalität, Zeit und Budget berücksichtigen. Der Druck, schnell Ergebnisse zu liefern, führt häufig zu Kompromissen bei der Codequalität#gls("codequalität") und technischen Nachhaltigkeit#gls("technische_nachhaltigkeit"), was zur Entstehung technischer Schulden führt. Diese wirken sich langfristig negativ auf die Software und die Entwicklerteams aus. Ähnlich wie bei finanziellen Schulden entstehen technische Schulden durch „Abkürzungen“ im Entwicklungsprozess. Enge Zeitpläne fördern suboptimale Lösungen, unzureichende Ressourcen führen zu vernachlässigter Dokumentation, und eine unzureichende Priorisierung technischer Exzellenz begünstigt unübersichtlichen und schwer wartbaren Code. Das Resultat ist ein komplexes, fehleranfälliges System, das erhöhten Wartungsaufwand und verzögerte Releasezyklen#gls("releasezyklen") nach sich zieht.

Doch die Auswirkungen technischer Schulden beschränken sich nicht nur auf die Software selbst; sie beeinflussen auch die Arbeitsweise und das Wohlbefinden der Entwicklerteams. Die ständige Auseinandersetzung mit einer fehleranfälligen Codebasis#gls("codebasis") kann zu Demotivation und Frustration führen, während technische Schulden die Kommunikation und Koordination im Team erschweren und Konflikte begünstigen. Es stellt sich daher die Frage, wie technische Schulden nicht nur aus einer technischen, sondern auch aus einer soziologischen Perspektive betrachtet werden können und welche Auswirkungen sie auf die Zusammenarbeit innerhalb von Entwicklungsteams haben.
// Motivation und Zielsetzung
In der modernen Softwareentwicklung spielen menschliche Faktoren eine zentrale Rolle. Trotz der zunehmenden Bedeutung von KI und Automatisierung hängt der Erfolg von Softwareprojekten weiterhin maßgeblich von den Menschen ab, die sie entwickeln. Ihre Motivation, Zusammenarbeit und ihr Wohlbefinden sind entscheidend für den Erfolg – besonders bei agilen Methoden#gls("agile_methoden"). Technische Schulden werden oft als rein technisches Problem betrachtet, doch ihre Auswirkungen gehen weit über den technischen Bereich hinaus. Sie beeinträchtigen nicht nur die Qualität der Software, sondern auch die Motivation und das Wohlbefinden der Entwicklerteams. Ziel dieser Arbeit ist es, die sozialen und psychologischen Auswirkungen technischer Schulden zu analysieren und deren Einfluss auf die Zusammenarbeit innerhalb von Entwicklungsteams zu untersuchen. Es wird insbesondere der Frage nachgegangen, wie technische Schulden die Motivation und Akzeptanz von Software beeinflussen und welche Strategien zur Vermeidung und Bewältigung existieren. Die gewonnenen Erkenntnisse sollen dazu beitragen, die negativen Auswirkungen technischer Schulden zu verringern und die Arbeitsbedingungen in Entwicklungsteams zu verbessern.
// Überblick zum Vorgehen
Diese Arbeit untersucht die Auswirkungen technischer Schulden auf die menschliche Seite der Softwareentwicklung. Zunächst werden die Grundlagen des Projekterfolgs und der Arbeitsmotivation sowie relevante Theorien und Erfolgsfaktoren erläutert, wobei typische Herausforderungen in Softwareprojekten identifiziert werden, die zu technischen Schulden führen können. Anschließend wird ein psychologische Akzeptanzmodell vorgestellt, welches zur Analyse der Auswirkungen technischer Schulden auf die Akzeptanz von Software und die Motivation der Entwickler dient. Nach einer Definition und Klassifizierung technischer Schulden werden deren Ursachen und Entstehungskontexte näher beleuchtet. Abschließend erfolgt eine Analyse der Auswirkungen technischer Schulden auf die Softwarequalität und die verschiedenen Ebenen der Entwicklerteams – von der individuellen Motivation über die Zusammenarbeit bis hin zur Teamdynamik. Der abschließende Teil der Arbeit bietet praxisorientierte Empfehlungen zur Minimierung und Bewältigung technischer Schulden, um die langfristige Effizienz und das Wohlbefinden innerhalb von Entwicklungsteams zu fördern.